[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n/* Package-scope variables */\nvar BUZZ;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/brentjanderson_buzz/lib/buzz/dist/buzz.js                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n // ----------------------------------------------------------------------------                                // 1\n // Buzz, a Javascript HTML5 Audio library                                                                      // 2\n // v1.1.10 - Built 2015-04-20 13:05                                                                            // 3\n // Licensed under the MIT license.                                                                             // 4\n // http://buzz.jaysalvat.com/                                                                                  // 5\n // ----------------------------------------------------------------------------                                // 6\n // Copyright (C) 2010-2015 Jay Salvat                                                                          // 7\n // http://jaysalvat.com/                                                                                       // 8\n // ----------------------------------------------------------------------------                                // 9\n                                                                                                                // 10\n(function(context, factory) {                                                                                   // 11\n    \"use strict\";                                                                                               // 12\n    if (typeof module !== \"undefined\" && module.exports) {                                                      // 13\n        module.exports = factory();                                                                             // 14\n    } else if (typeof define === \"function\" && define.amd) {                                                    // 15\n        define([], factory);                                                                                    // 16\n    } else {                                                                                                    // 17\n        context.buzz = factory();                                                                               // 18\n    }                                                                                                           // 19\n})(this, function() {                                                                                           // 20\n    \"use strict\";                                                                                               // 21\n    var AudioContext = window.AudioContext || window.webkitAudioContext;                                        // 22\n    var buzz = {                                                                                                // 23\n        defaults: {                                                                                             // 24\n            autoplay: false,                                                                                    // 25\n            duration: 5e3,                                                                                      // 26\n            formats: [],                                                                                        // 27\n            loop: false,                                                                                        // 28\n            placeholder: \"--\",                                                                                  // 29\n            preload: \"metadata\",                                                                                // 30\n            volume: 80,                                                                                         // 31\n            webAudioApi: false,                                                                                 // 32\n            document: window.document                                                                           // 33\n        },                                                                                                      // 34\n        types: {                                                                                                // 35\n            mp3: \"audio/mpeg\",                                                                                  // 36\n            ogg: \"audio/ogg\",                                                                                   // 37\n            wav: \"audio/wav\",                                                                                   // 38\n            aac: \"audio/aac\",                                                                                   // 39\n            m4a: \"audio/x-m4a\"                                                                                  // 40\n        },                                                                                                      // 41\n        sounds: [],                                                                                             // 42\n        el: document.createElement(\"audio\"),                                                                    // 43\n        getAudioContext: function() {                                                                           // 44\n            if (this.audioCtx === undefined) {                                                                  // 45\n                try {                                                                                           // 46\n                    this.audioCtx = AudioContext ? new AudioContext() : null;                                   // 47\n                } catch (e) {                                                                                   // 48\n                    this.audioCtx = null;                                                                       // 49\n                }                                                                                               // 50\n            }                                                                                                   // 51\n            return this.audioCtx;                                                                               // 52\n        },                                                                                                      // 53\n        sound: function(src, options) {                                                                         // 54\n            options = options || {};                                                                            // 55\n            var doc = options.document || buzz.defaults.document;                                               // 56\n            var pid = 0, events = [], eventsOnce = {}, supported = buzz.isSupported();                          // 57\n            this.load = function() {                                                                            // 58\n                if (!supported) {                                                                               // 59\n                    return this;                                                                                // 60\n                }                                                                                               // 61\n                this.sound.load();                                                                              // 62\n                return this;                                                                                    // 63\n            };                                                                                                  // 64\n            this.play = function() {                                                                            // 65\n                if (!supported) {                                                                               // 66\n                    return this;                                                                                // 67\n                }                                                                                               // 68\n                this.sound.play();                                                                              // 69\n                return this;                                                                                    // 70\n            };                                                                                                  // 71\n            this.togglePlay = function() {                                                                      // 72\n                if (!supported) {                                                                               // 73\n                    return this;                                                                                // 74\n                }                                                                                               // 75\n                if (this.sound.paused) {                                                                        // 76\n                    this.sound.play();                                                                          // 77\n                } else {                                                                                        // 78\n                    this.sound.pause();                                                                         // 79\n                }                                                                                               // 80\n                return this;                                                                                    // 81\n            };                                                                                                  // 82\n            this.pause = function() {                                                                           // 83\n                if (!supported) {                                                                               // 84\n                    return this;                                                                                // 85\n                }                                                                                               // 86\n                this.sound.pause();                                                                             // 87\n                return this;                                                                                    // 88\n            };                                                                                                  // 89\n            this.isPaused = function() {                                                                        // 90\n                if (!supported) {                                                                               // 91\n                    return null;                                                                                // 92\n                }                                                                                               // 93\n                return this.sound.paused;                                                                       // 94\n            };                                                                                                  // 95\n            this.stop = function() {                                                                            // 96\n                if (!supported) {                                                                               // 97\n                    return this;                                                                                // 98\n                }                                                                                               // 99\n                this.setTime(0);                                                                                // 100\n                this.sound.pause();                                                                             // 101\n                return this;                                                                                    // 102\n            };                                                                                                  // 103\n            this.isEnded = function() {                                                                         // 104\n                if (!supported) {                                                                               // 105\n                    return null;                                                                                // 106\n                }                                                                                               // 107\n                return this.sound.ended;                                                                        // 108\n            };                                                                                                  // 109\n            this.loop = function() {                                                                            // 110\n                if (!supported) {                                                                               // 111\n                    return this;                                                                                // 112\n                }                                                                                               // 113\n                this.sound.loop = \"loop\";                                                                       // 114\n                this.bind(\"ended.buzzloop\", function() {                                                        // 115\n                    this.currentTime = 0;                                                                       // 116\n                    this.play();                                                                                // 117\n                });                                                                                             // 118\n                return this;                                                                                    // 119\n            };                                                                                                  // 120\n            this.unloop = function() {                                                                          // 121\n                if (!supported) {                                                                               // 122\n                    return this;                                                                                // 123\n                }                                                                                               // 124\n                this.sound.removeAttribute(\"loop\");                                                             // 125\n                this.unbind(\"ended.buzzloop\");                                                                  // 126\n                return this;                                                                                    // 127\n            };                                                                                                  // 128\n            this.mute = function() {                                                                            // 129\n                if (!supported) {                                                                               // 130\n                    return this;                                                                                // 131\n                }                                                                                               // 132\n                this.sound.muted = true;                                                                        // 133\n                return this;                                                                                    // 134\n            };                                                                                                  // 135\n            this.unmute = function() {                                                                          // 136\n                if (!supported) {                                                                               // 137\n                    return this;                                                                                // 138\n                }                                                                                               // 139\n                this.sound.muted = false;                                                                       // 140\n                return this;                                                                                    // 141\n            };                                                                                                  // 142\n            this.toggleMute = function() {                                                                      // 143\n                if (!supported) {                                                                               // 144\n                    return this;                                                                                // 145\n                }                                                                                               // 146\n                this.sound.muted = !this.sound.muted;                                                           // 147\n                return this;                                                                                    // 148\n            };                                                                                                  // 149\n            this.isMuted = function() {                                                                         // 150\n                if (!supported) {                                                                               // 151\n                    return null;                                                                                // 152\n                }                                                                                               // 153\n                return this.sound.muted;                                                                        // 154\n            };                                                                                                  // 155\n            this.setVolume = function(volume) {                                                                 // 156\n                if (!supported) {                                                                               // 157\n                    return this;                                                                                // 158\n                }                                                                                               // 159\n                if (volume < 0) {                                                                               // 160\n                    volume = 0;                                                                                 // 161\n                }                                                                                               // 162\n                if (volume > 100) {                                                                             // 163\n                    volume = 100;                                                                               // 164\n                }                                                                                               // 165\n                this.volume = volume;                                                                           // 166\n                this.sound.volume = volume / 100;                                                               // 167\n                return this;                                                                                    // 168\n            };                                                                                                  // 169\n            this.getVolume = function() {                                                                       // 170\n                if (!supported) {                                                                               // 171\n                    return this;                                                                                // 172\n                }                                                                                               // 173\n                return this.volume;                                                                             // 174\n            };                                                                                                  // 175\n            this.increaseVolume = function(value) {                                                             // 176\n                return this.setVolume(this.volume + (value || 1));                                              // 177\n            };                                                                                                  // 178\n            this.decreaseVolume = function(value) {                                                             // 179\n                return this.setVolume(this.volume - (value || 1));                                              // 180\n            };                                                                                                  // 181\n            this.setTime = function(time) {                                                                     // 182\n                if (!supported) {                                                                               // 183\n                    return this;                                                                                // 184\n                }                                                                                               // 185\n                var set = true;                                                                                 // 186\n                this.whenReady(function() {                                                                     // 187\n                    if (set === true) {                                                                         // 188\n                        set = false;                                                                            // 189\n                        this.sound.currentTime = time;                                                          // 190\n                    }                                                                                           // 191\n                });                                                                                             // 192\n                return this;                                                                                    // 193\n            };                                                                                                  // 194\n            this.getTime = function() {                                                                         // 195\n                if (!supported) {                                                                               // 196\n                    return null;                                                                                // 197\n                }                                                                                               // 198\n                var time = Math.round(this.sound.currentTime * 100) / 100;                                      // 199\n                return isNaN(time) ? buzz.defaults.placeholder : time;                                          // 200\n            };                                                                                                  // 201\n            this.setPercent = function(percent) {                                                               // 202\n                if (!supported) {                                                                               // 203\n                    return this;                                                                                // 204\n                }                                                                                               // 205\n                return this.setTime(buzz.fromPercent(percent, this.sound.duration));                            // 206\n            };                                                                                                  // 207\n            this.getPercent = function() {                                                                      // 208\n                if (!supported) {                                                                               // 209\n                    return null;                                                                                // 210\n                }                                                                                               // 211\n                var percent = Math.round(buzz.toPercent(this.sound.currentTime, this.sound.duration));          // 212\n                return isNaN(percent) ? buzz.defaults.placeholder : percent;                                    // 213\n            };                                                                                                  // 214\n            this.setSpeed = function(duration) {                                                                // 215\n                if (!supported) {                                                                               // 216\n                    return this;                                                                                // 217\n                }                                                                                               // 218\n                this.sound.playbackRate = duration;                                                             // 219\n                return this;                                                                                    // 220\n            };                                                                                                  // 221\n            this.getSpeed = function() {                                                                        // 222\n                if (!supported) {                                                                               // 223\n                    return null;                                                                                // 224\n                }                                                                                               // 225\n                return this.sound.playbackRate;                                                                 // 226\n            };                                                                                                  // 227\n            this.getDuration = function() {                                                                     // 228\n                if (!supported) {                                                                               // 229\n                    return null;                                                                                // 230\n                }                                                                                               // 231\n                var duration = Math.round(this.sound.duration * 100) / 100;                                     // 232\n                return isNaN(duration) ? buzz.defaults.placeholder : duration;                                  // 233\n            };                                                                                                  // 234\n            this.getPlayed = function() {                                                                       // 235\n                if (!supported) {                                                                               // 236\n                    return null;                                                                                // 237\n                }                                                                                               // 238\n                return timerangeToArray(this.sound.played);                                                     // 239\n            };                                                                                                  // 240\n            this.getBuffered = function() {                                                                     // 241\n                if (!supported) {                                                                               // 242\n                    return null;                                                                                // 243\n                }                                                                                               // 244\n                return timerangeToArray(this.sound.buffered);                                                   // 245\n            };                                                                                                  // 246\n            this.getSeekable = function() {                                                                     // 247\n                if (!supported) {                                                                               // 248\n                    return null;                                                                                // 249\n                }                                                                                               // 250\n                return timerangeToArray(this.sound.seekable);                                                   // 251\n            };                                                                                                  // 252\n            this.getErrorCode = function() {                                                                    // 253\n                if (supported && this.sound.error) {                                                            // 254\n                    return this.sound.error.code;                                                               // 255\n                }                                                                                               // 256\n                return 0;                                                                                       // 257\n            };                                                                                                  // 258\n            this.getErrorMessage = function() {                                                                 // 259\n                if (!supported) {                                                                               // 260\n                    return null;                                                                                // 261\n                }                                                                                               // 262\n                switch (this.getErrorCode()) {                                                                  // 263\n                  case 1:                                                                                       // 264\n                    return \"MEDIA_ERR_ABORTED\";                                                                 // 265\n                                                                                                                // 266\n                  case 2:                                                                                       // 267\n                    return \"MEDIA_ERR_NETWORK\";                                                                 // 268\n                                                                                                                // 269\n                  case 3:                                                                                       // 270\n                    return \"MEDIA_ERR_DECODE\";                                                                  // 271\n                                                                                                                // 272\n                  case 4:                                                                                       // 273\n                    return \"MEDIA_ERR_SRC_NOT_SUPPORTED\";                                                       // 274\n                                                                                                                // 275\n                  default:                                                                                      // 276\n                    return null;                                                                                // 277\n                }                                                                                               // 278\n            };                                                                                                  // 279\n            this.getStateCode = function() {                                                                    // 280\n                if (!supported) {                                                                               // 281\n                    return null;                                                                                // 282\n                }                                                                                               // 283\n                return this.sound.readyState;                                                                   // 284\n            };                                                                                                  // 285\n            this.getStateMessage = function() {                                                                 // 286\n                if (!supported) {                                                                               // 287\n                    return null;                                                                                // 288\n                }                                                                                               // 289\n                switch (this.getStateCode()) {                                                                  // 290\n                  case 0:                                                                                       // 291\n                    return \"HAVE_NOTHING\";                                                                      // 292\n                                                                                                                // 293\n                  case 1:                                                                                       // 294\n                    return \"HAVE_METADATA\";                                                                     // 295\n                                                                                                                // 296\n                  case 2:                                                                                       // 297\n                    return \"HAVE_CURRENT_DATA\";                                                                 // 298\n                                                                                                                // 299\n                  case 3:                                                                                       // 300\n                    return \"HAVE_FUTURE_DATA\";                                                                  // 301\n                                                                                                                // 302\n                  case 4:                                                                                       // 303\n                    return \"HAVE_ENOUGH_DATA\";                                                                  // 304\n                                                                                                                // 305\n                  default:                                                                                      // 306\n                    return null;                                                                                // 307\n                }                                                                                               // 308\n            };                                                                                                  // 309\n            this.getNetworkStateCode = function() {                                                             // 310\n                if (!supported) {                                                                               // 311\n                    return null;                                                                                // 312\n                }                                                                                               // 313\n                return this.sound.networkState;                                                                 // 314\n            };                                                                                                  // 315\n            this.getNetworkStateMessage = function() {                                                          // 316\n                if (!supported) {                                                                               // 317\n                    return null;                                                                                // 318\n                }                                                                                               // 319\n                switch (this.getNetworkStateCode()) {                                                           // 320\n                  case 0:                                                                                       // 321\n                    return \"NETWORK_EMPTY\";                                                                     // 322\n                                                                                                                // 323\n                  case 1:                                                                                       // 324\n                    return \"NETWORK_IDLE\";                                                                      // 325\n                                                                                                                // 326\n                  case 2:                                                                                       // 327\n                    return \"NETWORK_LOADING\";                                                                   // 328\n                                                                                                                // 329\n                  case 3:                                                                                       // 330\n                    return \"NETWORK_NO_SOURCE\";                                                                 // 331\n                                                                                                                // 332\n                  default:                                                                                      // 333\n                    return null;                                                                                // 334\n                }                                                                                               // 335\n            };                                                                                                  // 336\n            this.set = function(key, value) {                                                                   // 337\n                if (!supported) {                                                                               // 338\n                    return this;                                                                                // 339\n                }                                                                                               // 340\n                this.sound[key] = value;                                                                        // 341\n                return this;                                                                                    // 342\n            };                                                                                                  // 343\n            this.get = function(key) {                                                                          // 344\n                if (!supported) {                                                                               // 345\n                    return null;                                                                                // 346\n                }                                                                                               // 347\n                return key ? this.sound[key] : this.sound;                                                      // 348\n            };                                                                                                  // 349\n            this.bind = function(types, func) {                                                                 // 350\n                if (!supported) {                                                                               // 351\n                    return this;                                                                                // 352\n                }                                                                                               // 353\n                types = types.split(\" \");                                                                       // 354\n                var self = this, efunc = function(e) {                                                          // 355\n                    func.call(self, e);                                                                         // 356\n                };                                                                                              // 357\n                for (var t = 0; t < types.length; t++) {                                                        // 358\n                    var type = types[t], idx = type;                                                            // 359\n                    type = idx.split(\".\")[0];                                                                   // 360\n                    events.push({                                                                               // 361\n                        idx: idx,                                                                               // 362\n                        func: efunc                                                                             // 363\n                    });                                                                                         // 364\n                    this.sound.addEventListener(type, efunc, true);                                             // 365\n                }                                                                                               // 366\n                return this;                                                                                    // 367\n            };                                                                                                  // 368\n            this.unbind = function(types) {                                                                     // 369\n                if (!supported) {                                                                               // 370\n                    return this;                                                                                // 371\n                }                                                                                               // 372\n                types = types.split(\" \");                                                                       // 373\n                for (var t = 0; t < types.length; t++) {                                                        // 374\n                    var idx = types[t], type = idx.split(\".\")[0];                                               // 375\n                    for (var i = 0; i < events.length; i++) {                                                   // 376\n                        var namespace = events[i].idx.split(\".\");                                               // 377\n                        if (events[i].idx === idx || namespace[1] && namespace[1] === idx.replace(\".\", \"\")) {   // 378\n                            this.sound.removeEventListener(type, events[i].func, true);                         // 379\n                            events.splice(i, 1);                                                                // 380\n                        }                                                                                       // 381\n                    }                                                                                           // 382\n                }                                                                                               // 383\n                return this;                                                                                    // 384\n            };                                                                                                  // 385\n            this.bindOnce = function(type, func) {                                                              // 386\n                if (!supported) {                                                                               // 387\n                    return this;                                                                                // 388\n                }                                                                                               // 389\n                var self = this;                                                                                // 390\n                eventsOnce[pid++] = false;                                                                      // 391\n                this.bind(type + \".\" + pid, function() {                                                        // 392\n                    if (!eventsOnce[pid]) {                                                                     // 393\n                        eventsOnce[pid] = true;                                                                 // 394\n                        func.call(self);                                                                        // 395\n                    }                                                                                           // 396\n                    self.unbind(type + \".\" + pid);                                                              // 397\n                });                                                                                             // 398\n                return this;                                                                                    // 399\n            };                                                                                                  // 400\n            this.trigger = function(types, detail) {                                                            // 401\n                if (!supported) {                                                                               // 402\n                    return this;                                                                                // 403\n                }                                                                                               // 404\n                types = types.split(\" \");                                                                       // 405\n                for (var t = 0; t < types.length; t++) {                                                        // 406\n                    var idx = types[t];                                                                         // 407\n                    for (var i = 0; i < events.length; i++) {                                                   // 408\n                        var eventType = events[i].idx.split(\".\");                                               // 409\n                        if (events[i].idx === idx || eventType[0] && eventType[0] === idx.replace(\".\", \"\")) {   // 410\n                            var evt = doc.createEvent(\"HTMLEvents\");                                            // 411\n                            evt.initEvent(eventType[0], false, true);                                           // 412\n                            evt.originalEvent = detail;                                                         // 413\n                            this.sound.dispatchEvent(evt);                                                      // 414\n                        }                                                                                       // 415\n                    }                                                                                           // 416\n                }                                                                                               // 417\n                return this;                                                                                    // 418\n            };                                                                                                  // 419\n            this.fadeTo = function(to, duration, callback) {                                                    // 420\n                if (!supported) {                                                                               // 421\n                    return this;                                                                                // 422\n                }                                                                                               // 423\n                if (duration instanceof Function) {                                                             // 424\n                    callback = duration;                                                                        // 425\n                    duration = buzz.defaults.duration;                                                          // 426\n                } else {                                                                                        // 427\n                    duration = duration || buzz.defaults.duration;                                              // 428\n                }                                                                                               // 429\n                var from = this.volume, delay = duration / Math.abs(from - to), self = this;                    // 430\n                this.play();                                                                                    // 431\n                function doFade() {                                                                             // 432\n                    setTimeout(function() {                                                                     // 433\n                        if (from < to && self.volume < to) {                                                    // 434\n                            self.setVolume(self.volume += 1);                                                   // 435\n                            doFade();                                                                           // 436\n                        } else if (from > to && self.volume > to) {                                             // 437\n                            self.setVolume(self.volume -= 1);                                                   // 438\n                            doFade();                                                                           // 439\n                        } else if (callback instanceof Function) {                                              // 440\n                            callback.apply(self);                                                               // 441\n                        }                                                                                       // 442\n                    }, delay);                                                                                  // 443\n                }                                                                                               // 444\n                this.whenReady(function() {                                                                     // 445\n                    doFade();                                                                                   // 446\n                });                                                                                             // 447\n                return this;                                                                                    // 448\n            };                                                                                                  // 449\n            this.fadeIn = function(duration, callback) {                                                        // 450\n                if (!supported) {                                                                               // 451\n                    return this;                                                                                // 452\n                }                                                                                               // 453\n                return this.setVolume(0).fadeTo(100, duration, callback);                                       // 454\n            };                                                                                                  // 455\n            this.fadeOut = function(duration, callback) {                                                       // 456\n                if (!supported) {                                                                               // 457\n                    return this;                                                                                // 458\n                }                                                                                               // 459\n                return this.fadeTo(0, duration, callback);                                                      // 460\n            };                                                                                                  // 461\n            this.fadeWith = function(sound, duration) {                                                         // 462\n                if (!supported) {                                                                               // 463\n                    return this;                                                                                // 464\n                }                                                                                               // 465\n                this.fadeOut(duration, function() {                                                             // 466\n                    this.stop();                                                                                // 467\n                });                                                                                             // 468\n                sound.play().fadeIn(duration);                                                                  // 469\n                return this;                                                                                    // 470\n            };                                                                                                  // 471\n            this.whenReady = function(func) {                                                                   // 472\n                if (!supported) {                                                                               // 473\n                    return null;                                                                                // 474\n                }                                                                                               // 475\n                var self = this;                                                                                // 476\n                if (this.sound.readyState === 0) {                                                              // 477\n                    this.bind(\"canplay.buzzwhenready\", function() {                                             // 478\n                        func.call(self);                                                                        // 479\n                    });                                                                                         // 480\n                } else {                                                                                        // 481\n                    func.call(self);                                                                            // 482\n                }                                                                                               // 483\n            };                                                                                                  // 484\n            this.addSource = function(src) {                                                                    // 485\n                var self = this, source = doc.createElement(\"source\");                                          // 486\n                source.src = src;                                                                               // 487\n                if (buzz.types[getExt(src)]) {                                                                  // 488\n                    source.type = buzz.types[getExt(src)];                                                      // 489\n                }                                                                                               // 490\n                this.sound.appendChild(source);                                                                 // 491\n                source.addEventListener(\"error\", function(e) {                                                  // 492\n                    self.trigger(\"sourceerror\", e);                                                             // 493\n                });                                                                                             // 494\n                return source;                                                                                  // 495\n            };                                                                                                  // 496\n            function timerangeToArray(timeRange) {                                                              // 497\n                var array = [], length = timeRange.length - 1;                                                  // 498\n                for (var i = 0; i <= length; i++) {                                                             // 499\n                    array.push({                                                                                // 500\n                        start: timeRange.start(i),                                                              // 501\n                        end: timeRange.end(i)                                                                   // 502\n                    });                                                                                         // 503\n                }                                                                                               // 504\n                return array;                                                                                   // 505\n            }                                                                                                   // 506\n            function getExt(filename) {                                                                         // 507\n                return filename.split(\".\").pop();                                                               // 508\n            }                                                                                                   // 509\n            if (supported && src) {                                                                             // 510\n                for (var i in buzz.defaults) {                                                                  // 511\n                    if (buzz.defaults.hasOwnProperty(i)) {                                                      // 512\n                        if (options[i] === undefined) {                                                         // 513\n                            options[i] = buzz.defaults[i];                                                      // 514\n                        }                                                                                       // 515\n                    }                                                                                           // 516\n                }                                                                                               // 517\n                this.sound = doc.createElement(\"audio\");                                                        // 518\n                if (options.webAudioApi) {                                                                      // 519\n                    var audioCtx = buzz.getAudioContext();                                                      // 520\n                    if (audioCtx) {                                                                             // 521\n                        this.source = audioCtx.createMediaElementSource(this.sound);                            // 522\n                        this.source.connect(audioCtx.destination);                                              // 523\n                    }                                                                                           // 524\n                }                                                                                               // 525\n                if (src instanceof Array) {                                                                     // 526\n                    for (var j in src) {                                                                        // 527\n                        if (src.hasOwnProperty(j)) {                                                            // 528\n                            this.addSource(src[j]);                                                             // 529\n                        }                                                                                       // 530\n                    }                                                                                           // 531\n                } else if (options.formats.length) {                                                            // 532\n                    for (var k in options.formats) {                                                            // 533\n                        if (options.formats.hasOwnProperty(k)) {                                                // 534\n                            this.addSource(src + \".\" + options.formats[k]);                                     // 535\n                        }                                                                                       // 536\n                    }                                                                                           // 537\n                } else {                                                                                        // 538\n                    this.addSource(src);                                                                        // 539\n                }                                                                                               // 540\n                if (options.loop) {                                                                             // 541\n                    this.loop();                                                                                // 542\n                }                                                                                               // 543\n                if (options.autoplay) {                                                                         // 544\n                    this.sound.autoplay = \"autoplay\";                                                           // 545\n                }                                                                                               // 546\n                if (options.preload === true) {                                                                 // 547\n                    this.sound.preload = \"auto\";                                                                // 548\n                } else if (options.preload === false) {                                                         // 549\n                    this.sound.preload = \"none\";                                                                // 550\n                } else {                                                                                        // 551\n                    this.sound.preload = options.preload;                                                       // 552\n                }                                                                                               // 553\n                this.setVolume(options.volume);                                                                 // 554\n                buzz.sounds.push(this);                                                                         // 555\n            }                                                                                                   // 556\n        },                                                                                                      // 557\n        group: function(sounds) {                                                                               // 558\n            sounds = argsToArray(sounds, arguments);                                                            // 559\n            this.getSounds = function() {                                                                       // 560\n                return sounds;                                                                                  // 561\n            };                                                                                                  // 562\n            this.add = function(soundArray) {                                                                   // 563\n                soundArray = argsToArray(soundArray, arguments);                                                // 564\n                for (var a = 0; a < soundArray.length; a++) {                                                   // 565\n                    sounds.push(soundArray[a]);                                                                 // 566\n                }                                                                                               // 567\n            };                                                                                                  // 568\n            this.remove = function(soundArray) {                                                                // 569\n                soundArray = argsToArray(soundArray, arguments);                                                // 570\n                for (var a = 0; a < soundArray.length; a++) {                                                   // 571\n                    for (var i = 0; i < sounds.length; i++) {                                                   // 572\n                        if (sounds[i] === soundArray[a]) {                                                      // 573\n                            sounds.splice(i, 1);                                                                // 574\n                            break;                                                                              // 575\n                        }                                                                                       // 576\n                    }                                                                                           // 577\n                }                                                                                               // 578\n            };                                                                                                  // 579\n            this.load = function() {                                                                            // 580\n                fn(\"load\");                                                                                     // 581\n                return this;                                                                                    // 582\n            };                                                                                                  // 583\n            this.play = function() {                                                                            // 584\n                fn(\"play\");                                                                                     // 585\n                return this;                                                                                    // 586\n            };                                                                                                  // 587\n            this.togglePlay = function() {                                                                      // 588\n                fn(\"togglePlay\");                                                                               // 589\n                return this;                                                                                    // 590\n            };                                                                                                  // 591\n            this.pause = function(time) {                                                                       // 592\n                fn(\"pause\", time);                                                                              // 593\n                return this;                                                                                    // 594\n            };                                                                                                  // 595\n            this.stop = function() {                                                                            // 596\n                fn(\"stop\");                                                                                     // 597\n                return this;                                                                                    // 598\n            };                                                                                                  // 599\n            this.mute = function() {                                                                            // 600\n                fn(\"mute\");                                                                                     // 601\n                return this;                                                                                    // 602\n            };                                                                                                  // 603\n            this.unmute = function() {                                                                          // 604\n                fn(\"unmute\");                                                                                   // 605\n                return this;                                                                                    // 606\n            };                                                                                                  // 607\n            this.toggleMute = function() {                                                                      // 608\n                fn(\"toggleMute\");                                                                               // 609\n                return this;                                                                                    // 610\n            };                                                                                                  // 611\n            this.setVolume = function(volume) {                                                                 // 612\n                fn(\"setVolume\", volume);                                                                        // 613\n                return this;                                                                                    // 614\n            };                                                                                                  // 615\n            this.increaseVolume = function(value) {                                                             // 616\n                fn(\"increaseVolume\", value);                                                                    // 617\n                return this;                                                                                    // 618\n            };                                                                                                  // 619\n            this.decreaseVolume = function(value) {                                                             // 620\n                fn(\"decreaseVolume\", value);                                                                    // 621\n                return this;                                                                                    // 622\n            };                                                                                                  // 623\n            this.loop = function() {                                                                            // 624\n                fn(\"loop\");                                                                                     // 625\n                return this;                                                                                    // 626\n            };                                                                                                  // 627\n            this.unloop = function() {                                                                          // 628\n                fn(\"unloop\");                                                                                   // 629\n                return this;                                                                                    // 630\n            };                                                                                                  // 631\n            this.setSpeed = function(speed) {                                                                   // 632\n                fn(\"setSpeed\", speed);                                                                          // 633\n                return this;                                                                                    // 634\n            };                                                                                                  // 635\n            this.setTime = function(time) {                                                                     // 636\n                fn(\"setTime\", time);                                                                            // 637\n                return this;                                                                                    // 638\n            };                                                                                                  // 639\n            this.set = function(key, value) {                                                                   // 640\n                fn(\"set\", key, value);                                                                          // 641\n                return this;                                                                                    // 642\n            };                                                                                                  // 643\n            this.bind = function(type, func) {                                                                  // 644\n                fn(\"bind\", type, func);                                                                         // 645\n                return this;                                                                                    // 646\n            };                                                                                                  // 647\n            this.unbind = function(type) {                                                                      // 648\n                fn(\"unbind\", type);                                                                             // 649\n                return this;                                                                                    // 650\n            };                                                                                                  // 651\n            this.bindOnce = function(type, func) {                                                              // 652\n                fn(\"bindOnce\", type, func);                                                                     // 653\n                return this;                                                                                    // 654\n            };                                                                                                  // 655\n            this.trigger = function(type) {                                                                     // 656\n                fn(\"trigger\", type);                                                                            // 657\n                return this;                                                                                    // 658\n            };                                                                                                  // 659\n            this.fade = function(from, to, duration, callback) {                                                // 660\n                fn(\"fade\", from, to, duration, callback);                                                       // 661\n                return this;                                                                                    // 662\n            };                                                                                                  // 663\n            this.fadeIn = function(duration, callback) {                                                        // 664\n                fn(\"fadeIn\", duration, callback);                                                               // 665\n                return this;                                                                                    // 666\n            };                                                                                                  // 667\n            this.fadeOut = function(duration, callback) {                                                       // 668\n                fn(\"fadeOut\", duration, callback);                                                              // 669\n                return this;                                                                                    // 670\n            };                                                                                                  // 671\n            function fn() {                                                                                     // 672\n                var args = argsToArray(null, arguments), func = args.shift();                                   // 673\n                for (var i = 0; i < sounds.length; i++) {                                                       // 674\n                    sounds[i][func].apply(sounds[i], args);                                                     // 675\n                }                                                                                               // 676\n            }                                                                                                   // 677\n            function argsToArray(array, args) {                                                                 // 678\n                return array instanceof Array ? array : Array.prototype.slice.call(args);                       // 679\n            }                                                                                                   // 680\n        },                                                                                                      // 681\n        all: function() {                                                                                       // 682\n            return new buzz.group(buzz.sounds);                                                                 // 683\n        },                                                                                                      // 684\n        isSupported: function() {                                                                               // 685\n            return !!buzz.el.canPlayType;                                                                       // 686\n        },                                                                                                      // 687\n        isOGGSupported: function() {                                                                            // 688\n            return !!buzz.el.canPlayType && buzz.el.canPlayType('audio/ogg; codecs=\"vorbis\"');                  // 689\n        },                                                                                                      // 690\n        isWAVSupported: function() {                                                                            // 691\n            return !!buzz.el.canPlayType && buzz.el.canPlayType('audio/wav; codecs=\"1\"');                       // 692\n        },                                                                                                      // 693\n        isMP3Supported: function() {                                                                            // 694\n            return !!buzz.el.canPlayType && buzz.el.canPlayType(\"audio/mpeg;\");                                 // 695\n        },                                                                                                      // 696\n        isAACSupported: function() {                                                                            // 697\n            return !!buzz.el.canPlayType && (buzz.el.canPlayType(\"audio/x-m4a;\") || buzz.el.canPlayType(\"audio/aac;\"));\n        },                                                                                                      // 699\n        toTimer: function(time, withHours) {                                                                    // 700\n            var h, m, s;                                                                                        // 701\n            h = Math.floor(time / 3600);                                                                        // 702\n            h = isNaN(h) ? \"--\" : h >= 10 ? h : \"0\" + h;                                                        // 703\n            m = withHours ? Math.floor(time / 60 % 60) : Math.floor(time / 60);                                 // 704\n            m = isNaN(m) ? \"--\" : m >= 10 ? m : \"0\" + m;                                                        // 705\n            s = Math.floor(time % 60);                                                                          // 706\n            s = isNaN(s) ? \"--\" : s >= 10 ? s : \"0\" + s;                                                        // 707\n            return withHours ? h + \":\" + m + \":\" + s : m + \":\" + s;                                             // 708\n        },                                                                                                      // 709\n        fromTimer: function(time) {                                                                             // 710\n            var splits = time.toString().split(\":\");                                                            // 711\n            if (splits && splits.length === 3) {                                                                // 712\n                time = parseInt(splits[0], 10) * 3600 + parseInt(splits[1], 10) * 60 + parseInt(splits[2], 10);\n            }                                                                                                   // 714\n            if (splits && splits.length === 2) {                                                                // 715\n                time = parseInt(splits[0], 10) * 60 + parseInt(splits[1], 10);                                  // 716\n            }                                                                                                   // 717\n            return time;                                                                                        // 718\n        },                                                                                                      // 719\n        toPercent: function(value, total, decimal) {                                                            // 720\n            var r = Math.pow(10, decimal || 0);                                                                 // 721\n            return Math.round(value * 100 / total * r) / r;                                                     // 722\n        },                                                                                                      // 723\n        fromPercent: function(percent, total, decimal) {                                                        // 724\n            var r = Math.pow(10, decimal || 0);                                                                 // 725\n            return Math.round(total / 100 * percent * r) / r;                                                   // 726\n        }                                                                                                       // 727\n    };                                                                                                          // 728\n    return buzz;                                                                                                // 729\n});                                                                                                             // 730\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['brentjanderson:buzz'] = {}, {\n  BUZZ: BUZZ\n});\n\n})();\n","servePath":"/packages/brentjanderson_buzz.js"}]